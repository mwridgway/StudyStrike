{"ast":null,"code":"import { create } from 'zustand';\nimport { authService } from '../services/authService';\nexport const useAuthStore = create((set, get) => ({\n  user: null,\n  isLoading: true,\n  error: null,\n  login: async provider => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const authUrl = `${process.env.REACT_APP_API_URL || 'http://localhost:8080'}/oauth2/authorization/${provider}`;\n      window.location.href = authUrl;\n    } catch (error) {\n      set({\n        error: 'Login failed',\n        isLoading: false\n      });\n    }\n  },\n  logout: async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      set({\n        user: null,\n        error: null\n      });\n    }\n  },\n  checkAuth: async () => {\n    set({\n      isLoading: true\n    });\n    try {\n      const user = await authService.getCurrentUser();\n      set({\n        user,\n        isLoading: false\n      });\n    } catch (error) {\n      set({\n        user: null,\n        isLoading: false\n      });\n    }\n  },\n  setUser: user => set({\n    user\n  }),\n  setLoading: isLoading => set({\n    isLoading\n  }),\n  setError: error => set({\n    error\n  })\n}));","map":{"version":3,"names":["create","authService","useAuthStore","set","get","user","isLoading","error","login","provider","authUrl","process","env","REACT_APP_API_URL","window","location","href","logout","console","checkAuth","getCurrentUser","setUser","setLoading","setError"],"sources":["C:/dev/StudyStrike/frontend/src/store/authStore.ts"],"sourcesContent":["import { create } from 'zustand';\r\nimport { User } from '../types';\r\nimport { authService } from '../services/authService';\r\n\r\ninterface AuthState {\r\n  user: User | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  login: (provider: string) => void;\r\n  logout: () => void;\r\n  checkAuth: () => Promise<void>;\r\n  setUser: (user: User | null) => void;\r\n  setLoading: (loading: boolean) => void;\r\n  setError: (error: string | null) => void;\r\n}\r\n\r\nexport const useAuthStore = create<AuthState>((set, get) => ({\r\n  user: null,\r\n  isLoading: true,\r\n  error: null,\r\n\r\n  login: async (provider: string) => {\r\n    set({ isLoading: true, error: null });\r\n    try {\r\n      const authUrl = `${process.env.REACT_APP_API_URL || 'http://localhost:8080'}/oauth2/authorization/${provider}`;\r\n      window.location.href = authUrl;\r\n    } catch (error) {\r\n      set({ error: 'Login failed', isLoading: false });\r\n    }\r\n  },\r\n\r\n  logout: async () => {\r\n    try {\r\n      await authService.logout();\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      set({ user: null, error: null });\r\n    }\r\n  },\r\n\r\n  checkAuth: async () => {\r\n    set({ isLoading: true });\r\n    try {\r\n      const user = await authService.getCurrentUser();\r\n      set({ user, isLoading: false });\r\n    } catch (error) {\r\n      set({ user: null, isLoading: false });\r\n    }\r\n  },\r\n\r\n  setUser: (user: User | null) => set({ user }),\r\n  setLoading: (isLoading: boolean) => set({ isLoading }),\r\n  setError: (error: string | null) => set({ error }),\r\n})); "],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAEhC,SAASC,WAAW,QAAQ,yBAAyB;AAcrD,OAAO,MAAMC,YAAY,GAAGF,MAAM,CAAY,CAACG,GAAG,EAAEC,GAAG,MAAM;EAC3DC,IAAI,EAAE,IAAI;EACVC,SAAS,EAAE,IAAI;EACfC,KAAK,EAAE,IAAI;EAEXC,KAAK,EAAE,MAAOC,QAAgB,IAAK;IACjCN,GAAG,CAAC;MAAEG,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACrC,IAAI;MACF,MAAMG,OAAO,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB,yBAAyBJ,QAAQ,EAAE;MAC9GK,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGN,OAAO;IAChC,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdJ,GAAG,CAAC;QAAEI,KAAK,EAAE,cAAc;QAAED,SAAS,EAAE;MAAM,CAAC,CAAC;IAClD;EACF,CAAC;EAEDW,MAAM,EAAE,MAAAA,CAAA,KAAY;IAClB,IAAI;MACF,MAAMhB,WAAW,CAACgB,MAAM,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdW,OAAO,CAACX,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC,CAAC,SAAS;MACRJ,GAAG,CAAC;QAAEE,IAAI,EAAE,IAAI;QAAEE,KAAK,EAAE;MAAK,CAAC,CAAC;IAClC;EACF,CAAC;EAEDY,SAAS,EAAE,MAAAA,CAAA,KAAY;IACrBhB,GAAG,CAAC;MAAEG,SAAS,EAAE;IAAK,CAAC,CAAC;IACxB,IAAI;MACF,MAAMD,IAAI,GAAG,MAAMJ,WAAW,CAACmB,cAAc,CAAC,CAAC;MAC/CjB,GAAG,CAAC;QAAEE,IAAI;QAAEC,SAAS,EAAE;MAAM,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,GAAG,CAAC;QAAEE,IAAI,EAAE,IAAI;QAAEC,SAAS,EAAE;MAAM,CAAC,CAAC;IACvC;EACF,CAAC;EAEDe,OAAO,EAAGhB,IAAiB,IAAKF,GAAG,CAAC;IAAEE;EAAK,CAAC,CAAC;EAC7CiB,UAAU,EAAGhB,SAAkB,IAAKH,GAAG,CAAC;IAAEG;EAAU,CAAC,CAAC;EACtDiB,QAAQ,EAAGhB,KAAoB,IAAKJ,GAAG,CAAC;IAAEI;EAAM,CAAC;AACnD,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}